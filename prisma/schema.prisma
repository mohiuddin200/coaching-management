generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  password         String?
  firstName        String
  lastName         String
  role             Role      @default(STUDENT)
  phoneNumber      String?
  parentPhone      String?
  emergencyContact String?
  smsEnabled       Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  
  // Relations
  enrollments      Enrollment[]
  attendance       Attendance[]
  teachingClasses  Class[]
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
  STAFF
}

model Enrollment {
  id             String   @id @default(uuid())
  userId         String
  classId        String
  enrollmentDate DateTime @default(now())
  status         String
  paymentStatus  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  // Relations
  user           User     @relation(fields: [userId], references: [id])
  class          Class    @relation(fields: [classId], references: [id])
}

model Class {
  id           String   @id @default(uuid())
  name         String
  description  String?
  scheduleTime DateTime
  duration     Int
  teacherId    String
  capacity     Int
  roomNumber   String?
  status       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relations
  enrollments  Enrollment[]
  attendance   Attendance[]
  teacher      User     @relation(fields: [teacherId], references: [id])
}

model Attendance {
  id        String   @id @default(uuid())
  userId    String
  classId   String
  timestamp DateTime @default(now())
  status    String
  deviceId  String?
  entryType String?
  markedBy  String?
  createdAt DateTime @default(now())
  
  // Relations
  user      User     @relation(fields: [userId], references: [id])
  class     Class    @relation(fields: [classId], references: [id])
}